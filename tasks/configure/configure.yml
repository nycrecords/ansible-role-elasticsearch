---
## Configure SSL
- name: Create certs directory
  file:
    path: /etc/elasticsearch/certs
    state: directory
  when: xpack_transport_ssl_enabled or xpack_http_ssl_enabled
  tags:
    - configure

- name: Copy ca / server certs to certs directory
  copy:
    src: "{{ item }}"
    dest: /etc/elasticsearch/certs
  with_items:
    - "{{ ca_crt }}"
    - "{{ server_crt }}"
    - "{{ server_key }}" 
  when: xpack_transport_ssl_enabled or xpack_http_ssl_enabled
  tags:
    - configure

## Setup ElasticSearch Config Files
- name: Configure Elasticsearch.
  template:
    src: "{{ item }}.j2"
    dest: /etc/elasticsearch/{{ item }}
    owner: root
    group: elasticsearch
    mode: 0660
  with_items:
    - elasticsearch.yml
    - jvm.options
  notify: restart elasticsearch
  tags:
    - configure 

- name: Force a restart if configuration has changed.
  meta: flush_handlers

- name: Start Elasticsearch.
  service:
    name: elasticsearch
    state: "{{ elasticsearch_service_state }}"
    enabled: "{{ elasticsearch_service_enabled }}"

- name: Make sure Elasticsearch is running before proceeding.
  wait_for:
    host: "{{ elasticsearch_network_host }}"
    port: "{{ elasticsearch_http_port }}"
    delay: 3
    timeout: 300

- name: Set passwords for default users
  expect:
    command: /usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive
    responses:
      (.*)Please confirm that you would like to continue \[y/N\](.*): "y"
      Enter password for \[elastic\]: "{{ elastic_user_password }}"
      Reenter password for \[elastic\]: "{{ elastic_user_password }}"
      Enter password for \[apm_system\]: "{{ apm_system_user_password }}"
      Reenter password for \[apm_system\]: "{{ apm_system_user_password }}"
      Enter password for \[kibana_system\]: "{{ kibana_system_user_password }}"
      Reenter password for \[kibana_system\]: "{{ kibana_system_user_password }}"
      Enter password for \[logstash_system\]: "{{ logstash_system_user_password }}"
      Reenter password for \[logstash_system\]: "{{ logstash_system_user_password }}"
      Enter password for \[beats_system\]: "{{ beats_system_user_password }}"
      Reenter password for \[beats_system\]: "{{ beats_system_user_password }}"
      Enter password for \[remote_monitoring_user\]: "{{ remote_monitoring_user_password }}"
      Reenter password for \[remote_monitoring_user\]: "{{ remote_monitoring_user_password }}"
  ignore_errors: true

- name: Create logstash_writer role
  uri:
    url: "http://{{ elasticsearch_network_host }}:{{ elasticsearch_http_port }}/_security/role/logstash_writer/?pretty"
    user: elastic
    password: "{{ elastic_user_password }}"
    method: POST
    body: "{{ lookup('file','templates/logstash_writer.json') }}"
    force_basic_auth: yes
    body_format: json

- name: Create logstash_reader role
  uri:
    url: "http://{{ elasticsearch_network_host }}:{{ elasticsearch_http_port }}/_security/role/logstash_reader/?pretty"
    user: elastic
    password: "{{ elastic_user_password }}"
    method: POST
    body: "{{ lookup('file','templates/logstash_reader.json') }}"
    force_basic_auth: yes
    body_format: json

- name: Create logstash_internal user
  uri:
    url: "http://{{ elasticsearch_network_host }}:{{ elasticsearch_http_port }}/_security/user/logstash_internal/?pretty"
    user: elastic
    password: "{{ elastic_user_password }}"
    method: POST
    body: "{{ lookup('file','templates/logstash_internal.json') }}"
    force_basic_auth: yes
    body_format: json

- name: Create logstash_user user
  uri:
    url: "http://{{ elasticsearch_network_host }}:{{ elasticsearch_http_port }}/_security/user/logstash_user/?pretty"
    user: elastic
    password: "{{ elastic_user_password }}"
    method: POST
    body: "{{ lookup('file','templates/logstash_user.json') }}"
    force_basic_auth: yes
    body_format: json
